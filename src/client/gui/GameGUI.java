/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client.gui;

import chess.core.Game;
import chess.core.pieces.Piece;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.GridLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Arrays;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 *
 * @author djfearon0
 */
public class GameGUI extends javax.swing.JFrame {

    private ActionListener buttons;
    private Color darkCell = new Color(74, 165, 74);
    private Color lightCell = new Color(212, 212, 198);
    private JButton[][] cells;
    private JPanel jp;
    private Graphics graphics;
    private static String color;
    private Piece[][] pieces;

    /**
     * Creates new form GameGUI
     *
     * @param color
     */
    public GameGUI(String color) {
        initComponents();
        cells = new JButton[8][8];
        jPanel1.setLayout(new GridLayout(8, 8));
        makeButtons();
        drawPieces();

        repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setPreferredSize(new java.awt.Dimension(440, 440));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 440, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 474, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(165, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameGUI(color).setVisible(true);
            }
        });
    }

    private void drawPieces() {
        for (int i = 0; i < 8; i++) {
            for (int j = 0; j < 8; j++) {
                JButton b = cells[i][j];
                if (pieces[i][j] != null) {
                    b.setText(getPieceCode(pieces[i][j]));
                    if (pieces[i][j].getColor().equals("black")) {
                        b.setForeground(Color.BLACK);
                    } else {
                        b.setForeground(Color.WHITE);
                    }
                }
            }
        }
    }

    private void makeButtons() {
        int c = 0;
        for (int i = 0; i < 8; i++) {
            for (int j = 0; j < 8; j++) {
                JButton b = new JButton();
                if (c == 0) {
                    b.setBackground(lightCell);
                } else {
                    b.setBackground(darkCell);
                }
                jPanel1.add(b);
                b.setMargin(new Insets(0, 0, 0, 0));
                b.setFont(new Font("Dialog", Font.PLAIN, 40));
                b.addActionListener((ActionEvent ae) -> {
                    int[] click = getButton((JButton) ae.getSource());
                    System.out.println(Arrays.toString(click));
                });
                cells[i][j] = b;
                c ^= 1;
            }
            c ^= 1;
        }
    }

    private void updateBoard(Piece[][] p) {
        pieces = p;
        drawPieces();
        repaint();
    }

    private int[] getButton(JButton b) {
        int[] click = new int[2];
        for (int i = 0; i < 8; i++) {
            for (int j = 0; j < 8; j++) {
                if (b.equals(cells[i][j])) {
                    click[0] = i;
                    click[1] = j;
                }
            }
        }
        return click;
    }

    private String getPieceCode(Piece p) {
        String code = null;
        boolean c;

        if (p.getColor().equals("white")) {
            c = true;
        } else {
            c = false;
        }

        switch (p.getType()) {
            case "king":
                if (c) {
                    code = "\u2654";
                } else {
                    code = "\u265A";
                }
                break;
            case "queen":
                if (c) {
                    code = "\u2655";
                } else {
                    code = "\u265B";
                }
                break;
            case "rook":
                if (c) {
                    code = "\u2656";
                } else {
                    code = "\u265C";
                }
                break;
            case "bishop":
                if (c) {
                    code = "\u2657";
                } else {
                    code = "\u265D";
                }
                break;
            case "knight":
                if (c) {
                    code = "\u2658";
                } else {
                    code = "\u265E";
                }
                break;
            case "pawn":
                if (c) {
                    code = "\u2659";
                } else {
                    code = "\u265F";
                }
                break;

        }
        return code;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
